{"version":3,"sources":["components/Markdown.js","components/Markup.js","App.js","reportWebVitals.js","store/reducers/markdownReducer.js","store/reducers/rootReducer.js","index.js"],"names":["Markdown","args","onChange","e","setState","prevState","markdown","target","value","state","submit","props","translateMarkdown","this","className","name","id","cols","rows","Component","connect","dispatch","type","marked","setOptions","breaks","sanitize","markup","body","dangerouslySetInnerHTML","__html","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,EAAb,kDACE,aAAsB,IAAD,iDAANC,EAAM,yBAANA,EAAM,uBACnB,+BAASA,KAqBXC,SAAW,SAACC,GACV,EAAKC,UAAS,SAAAC,GAAS,kCAClBA,GADkB,IAErBC,SAAUH,EAAEI,OAAOC,WAEnB,kBAAO,EAAKC,MAAMC,QAAU,EAAKC,MAAMC,kBAAkB,EAAKH,MAAMH,cAzBtE,EAAKG,MAAQ,CACXH,SAAS,uZAaTI,QAAQ,GAhBS,EADvB,qDAoBE,WACEG,KAAKF,MAAMC,kBAAkBC,KAAKJ,MAAMH,YArB5C,oBA+BE,WACE,OACE,qBAAKQ,UAAU,2BAAf,SACE,0BAAUZ,SAAUW,KAAKX,SACzBa,KAAK,WAAWC,GAAG,SAASC,KAAK,KACjCC,KAAK,KAAKV,MAAOK,KAAKJ,MAAMH,iBApCpC,GAA8Ba,aA8CfC,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCT,kBAAmB,SAACN,GAAD,OAAce,EAAS,CAACC,KAAM,YAAahB,iBAGjDc,CAAkCpB,G,sBC7CjDuB,IAAOC,WAAW,CAChBC,QAAQ,EACRC,UAAU,IAYZ,IAIeN,eAJS,SAACX,GAAD,MAAY,CAClCkB,OAAQlB,EAAMH,YAGDc,EAbf,SAAgBT,GACd,IAAMiB,EAAOL,IAAOZ,EAAMgB,QAC1B,OACE,qBAAKX,GAAG,UAAUF,UAAU,yBAC5Be,wBAAyB,CAACC,OAAQF,Q,MCGvBG,MAZf,WACE,OACE,qBAAKjB,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCEOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCPRQ,EAAY,CAChBnC,SAAU,WCGGoC,EDAgB,WAAgC,IAA/BjC,EAA8B,uDAAtBgC,EAAWE,EAAW,uCAC5D,OAAQA,EAAOrB,MACb,IAAK,YAAa,MAAO,CAAEhB,SAAUqC,EAAOrC,UAC5C,QAAS,OAAOG,IEIdmC,EAAQC,YAAYH,GAE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJK,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.43c4e5f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styling/Markdown.css';\n\nexport class Markdown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markdown: `# Header \n  ## Subheader\n  [google](www.google.com)\n  \\`function foo = (bar) => return bar;\\`\n  \\`\\`\\`This\n    is\n    code\n  \\`\\`\\`\n  1. Best markdown previewer!\n  > Made by professionals, for professionals\n  ![A brown cat](https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpetsnurturing.com%2Fwp-content%2Fuploads%2F2018%2F08%2FSpotted-cat-breeds-4.jpg&f=1&nofb=1)\n  **this is fun**\n      `,\n      submit: true\n    };\n  }\n  componentDidMount () {\n    this.props.translateMarkdown(this.state.markdown);\n  }\n  onChange = (e) => {\n    this.setState(prevState => ({\n      ...prevState,\n      markdown: e.target.value\n      }),\n      () => !this.state.submit || this.props.translateMarkdown(this.state.markdown)\n    );\n  }\n  render() {\n    return (\n      <div className=\"Markdown col-12 col-lg-6\">\n        <textarea onChange={this.onChange} \n        name=\"markdown\" id=\"editor\" cols=\"30\" \n        rows=\"10\" value={this.state.markdown}></textarea>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  translateMarkdown: (markdown) => dispatch({type: \"TRANSLATE\", markdown})\n});\n\nexport default connect(null, mapDispatchToProps)(Markdown);\n","import marked from 'marked';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport '../styling/Markup.css';\n\nmarked.setOptions({\n  breaks: true,\n  sanitize: true,\n});\n\nfunction Markup(props) {\n  const body = marked(props.markup);\n  return (\n    <div id=\"preview\" className=\"Markup col-12 col-lg-6\" \n    dangerouslySetInnerHTML={{__html: body}}>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  markup: state.markdown\n});\n\nexport default connect(mapStateToProps)(Markup);\n\n\n","import React from 'react';\nimport Markdown from './components/Markdown';\nimport Markup from './components/Markup';\nimport './styling/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <Markdown />\n        <Markup />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n  markdown: \"# Hello\"\n}\n\nexport const markdownReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"TRANSLATE\": return { markdown: action.markdown };\n    default: return state;\n  }\n}","import { markdownReducer } from \"./markdownReducer\";\n\nconst rootReducer = markdownReducer ;\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap';\nimport './styling/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}